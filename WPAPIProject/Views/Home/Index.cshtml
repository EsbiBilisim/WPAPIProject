@using WPAPIProject.Logic.Interfaces
@inject ISqls sql;
@{
    ViewData["Title"] = "Ana Sayfa";

    var kullanici = sql.KullaniciGetir("Kullanici");
    var kullaniciId = kullanici.ID;
}

<style>
    .dx-datagrid-group-panel, .dx-group-panel-message {
        color: rebeccapurple !important;
    }

    .dx-row dx-column-lines, .dx-header-row {
        color: red;
        font-weight: bold;
    }

    input:focus, select:focus, textarea:focus {
        outline: none !important;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5) !important;
        border-color: #007bff !important;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .file-upload-container {
        text-align: right;
    }

        .file-upload-container .form-label {
            display: block;
            margin-bottom: 5px;
        }

        .file-upload-container .form-control {
            flex: 1;
        }

        .file-upload-container .d-flex {
            gap: 10px;
        }

    #mention-dropdown {
        position: absolute;
        display: none;
        background-color: white;
        border: 1px solid #ccc;
        width: 200px;
        max-height: 150px;
        overflow-y: auto;
        z-index: 1000;
    }

        #mention-dropdown li {
            padding: 5px 10px;
        }

            #mention-dropdown li:hover {
                background-color: #f0f0f0;
            }

</style>

<input type="hidden" id="kl" value="@kullaniciId" />

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title" style="color:red;">Müşteriler</h5>
        <div class="file-upload-container">
            <label for="file" class="form-label" style="text-align:left; font-size: 14px; color: red;">Müşteri Eklemek için Excel Dosyanızı Yükleyiniz</label>
            <div class="d-flex align-items-center">
                <input type="file" id="file" name="file" class="form-control-file" style="background-color: skyblue; padding:2px;" accept=".xls, .xlsx" />
                <button id="uploadButton" class="btn btn-primary">Yükle</button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div id="firmaYetkiliTelefon" style="margin-bottom:15px;"></div>

        <span class="headers">Mesaj</span>
        <div style="position: relative;">

            <textarea id="aciklama" style="border: 1px solid #ccc; padding: 5px; min-height: 100px; width: 100%;" placeholder="Lütfen bir dosya yükleyin veya mesaj girin."></textarea>
            <ul id="mention-dropdown" style="position: absolute; display: none; border: 1px solid #ccc; background: white; list-style: none; padding: 5px;"></ul>


        </div>
    </div>
    <div class="card-footer" style="display:flex; justify-content:flex-end;">
        <input type="file" id="istekDosya" class="form-control-file" style="background-color: skyblue; padding:2px;" multiple accept=".pdf,image/*">
        <button class="btn btn-success" style="margin-right:10px; margin-left:10px;" onclick="openConfirmationModal()">Gönder</button>
    </div>
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="min-width:65%;">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <div style="display: flex; justify-content:flex-start; align-items: center;">
                    <button type="button" class="btn btn-primary" onclick="confirmSend()" style="margin-right:10px;">Evet</button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal">Hayır</button>
                </div>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p id="totalSelectedContacts"></p>
                <p><strong>Seçilenler:</strong></p>
                <div id="selectedContacts" style="max-height:300px; overflow-y:scroll; padding:5px; margin-bottom:15px; border:1px solid;"></div>
                <p><strong>Açıklama:</strong> <span id="selectedDescription"></span></p>
                <p>Onaylıyor Musunuz?</p>
            </div>
        </div>
    </div>
</div>

<div id="modal_editModal" class="modal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog" style="min-width:65%;">
        <div class="modal-content">
            <div class="modal-header bg-success">
                Düzenle
                <input type="hidden" id="hiddenClick" name="name" value="" />
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="editGrid"></div>
            </div>
            <div class="modal-footer" style="margin-top:25px;">
                <button type="button" class="btn btn-success" onclick="duzenleKaydet()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div id="modal_addModal" class="modal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog" style="min-width:65%;">
        <div class="modal-content">
            <div class="modal-header bg-success">
                Ekle
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="addGrid"></div>
            </div>
            <div class="modal-footer" style="margin-top:25px;">
                <button type="button" class="btn btn-success" onclick="ekleKaydet()">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script>

        function showProgressModal() {
            if (document.querySelector("#progressModal") == null) {
                var progressModal = `
                    <div class="modal" id="progressModal" data-backdrop="static" data-keyboard="false" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Mesajlar Gönderiliyor...</h4>
                                </div>
                                <div class="modal-body">
                                    <p id="progressText">Gönderilen: 0 / 0</p>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated"
                                             role="progressbar"
                                             aria-valuemin="0" aria-valuemax="100"
                                             style="width: 0%;"
                                             id="progressBar">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;
                $(document.body).append(progressModal);
            }

            $("#progressModal").modal("show");
        }

        function updateProgressModal(sent, total) {
            var percentage = Math.round((sent / total) * 100);
            $("#progressText").text(`Gönderilen: ${sent} / ${total}`);
            $("#progressBar").css("width", percentage + "%");
        }

        function hideProgressModal() {
            $("#progressModal").modal("hide");
        }


        $(document).ready(function () {
            $('#aciklama').val("");
             $('#istekDosya').val("");
              $('#file').val("");

             getir();

            document.getElementById('aciklama').addEventListener('input', function (e) {
                const mentionDropdown = document.getElementById('mention-dropdown');
                const value = e.target.value;

                var cursorPosition = $('#aciklama').prop("selectionStart");

                if (value.endsWith('@@')) {
                    mentionDropdown.style.display = 'block';
                    mentionDropdown.innerHTML = '';

                    var dataGrid = $("#firmaYetkiliTelefon").dxDataGrid("instance");
                    if (dataGrid) {
                        var columns = dataGrid.getVisibleColumns();

                        columns.forEach(column => {
                            if (column.dataField === "EKLENMETARIHI") {
                                return;
                            }

                            const li = document.createElement('li');
                            li.textContent = column.caption;

                            li.addEventListener('click', () => {
                                const beforeMatch = value.slice(0, cursorPosition - 2);
                                const afterMatch = value.slice(cursorPosition);

                                const cleanedCaption = column.caption
                                    .replace(/\s+/g, '')
                                    .trim();

                                e.target.value = `${beforeMatch} @@${cleanedCaption} ${afterMatch}`;

                                mentionDropdown.style.display = 'none';
                            });

                            mentionDropdown.appendChild(li);
                        });
                    }


                    const caretPosition = getCaretCoordinates(e.target, cursorPosition);

                    mentionDropdown.style.left = `${caretPosition.left}px`;

                    mentionDropdown.style.top = `3vh`;
                } else {
                    mentionDropdown.style.display = 'none';
                }
            });

            function getCaretCoordinates(input, position) {
                const div = document.createElement('div');
                const style = window.getComputedStyle(input);

                Array.from(style).forEach(prop => {
                    div.style[prop] = style[prop];
                });

                div.style.position = 'absolute';
                div.style.visibility = 'hidden';
                div.style.whiteSpace = 'pre-wrap';
                div.style.wordWrap = 'break-word';
                div.textContent = input.value.substring(0, position);

                const span = document.createElement('span');
                span.textContent = input.value.substring(position) || '.';
                div.appendChild(span);

                document.body.appendChild(div);
                const rect = span.getBoundingClientRect();
                document.body.removeChild(div);

                return { left: rect.left, top: rect.top };
            }

        $('#uploadButton').click(function(e) {
            showPleaseWait();

            e.preventDefault();

            var fileInput = $('#file')[0];
            var formData = new FormData();

            if (fileInput.files.length > 0) {
                formData.append("file", fileInput.files[0]);

                $.ajax({
                    url: '/Home/Upload',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function(response) {
                        if (response.sonuc) {
                            alert(response.mesaj);
                            $('#file').val("");
                            getir();
                            hidePleaseWait();
                        }
                    },
                    error: function(xhr, status, error) {
                        var response = xhr.responseJSON;
                        if (response) {
                            alert(response.mesaj);
                        } else {
                            alert(response.mesaj);
                        }
                    }
                });
            } else {
                hidePleaseWait();
                alert("Lütfen bir dosya seçin.");
                // $('#responseMessage').html('<div class="alert alert-warning">Lütfen bir dosya seçin.</div>');
                }
            });
        });

        function openConfirmationModal() {
            var selectedData = $('#firmaYetkiliTelefon').dxDataGrid('instance').getSelectedRowsData();
            if (selectedData.length === 0) {
                alert("Seçim Yapınız!");
                return;
            }

            var aciklama = $("#aciklama").val();

            var selectedContactsHTML = '<ul>';
            selectedData.forEach(function (item) {
                selectedContactsHTML += '<li>' + item.ADSOYAD + ' (' + item.TELEFONNO + ', ' + item.ISGRUBU + ')</li>';
            });
            selectedContactsHTML += '</ul>';

            $('#selectedContacts').html(selectedContactsHTML);
            $('#selectedDescription').text(aciklama);

            var totalContacts = selectedData.length;
            $('#totalSelectedContacts').text('Toplam Seçilen Kişi Sayısı: ' + totalContacts);

            $('#confirmationModal').modal('show');
        }

        function getir() {
            showPleaseWait();
            var kl = $("#kl").val();
            $.ajax({
                url: '/Home/FirmaMusterileriGetir',
                method: 'GET',
                success: function (response) {
                    hidePleaseWait();
                    var obj = response.data.data;

                    for (var i = 0; i < obj.length; i++) {
                        var fields = ['EKLENMETARIHI'];
                        for (var j = 0; j < fields.length; j++) {
                            var field = fields[j];
                            if (obj[i][field]) {
                                var tarih = new Date(obj[i][field]);
                                obj[i][field] = tarih;
                            }
                        }
                    }

                    var kayitSayisi = obj.length;
                    $("#total").text("(" + kayitSayisi + ")");

                    $("#firmaYetkiliTelefon").dxDataGrid({
                        dataSource: obj,
                        keyExpr: "ID",
                        allowColumnResizing: true,
                        columnResizingMode: "widget",
                        showBorders: true,
                        allowColumnReordering: true,
                        sorting: {
                            mode: "multiple"
                        },
                        showRowLines: true,
                        paging: {
                            enabled: true,
                            size: 100
                        },
                        pager: {
                            showPageSizeSelector: true,
                            allowedPageSizes: [10, 20, 50,100],
                            showNavigationButtons: true,
                        },
                        searchPanel: {
                            visible: true,
                            highlightCaseSensitive: true,
                        },
                        columnChooser: {
                            enabled: true,
                            mode: "select"
                        },
                        selection: {
                            mode: 'multiple'
                        },
                        columnAutoWidth: true,
                        width: '100%',
                        focusedRowEnabled: true,
                        columns: [
                            {
                                dataField: "ID",
                                caption: "ID",
                                visible: false,
                            },
                            {
                                dataField: "EKLENMETARIHI",
                                caption: "Kayıt Tarihi",
                                format: 'dd.MM.yyyy HH:mm:ss'
                            },
                            {
                                dataField: "ADSOYAD",
                                caption: "Ad Soyad",
                            },
                            {
                                dataField: "TELEFONNO",
                                caption: "Telefon",
                            },
                            {
                                dataField: "ISGRUBU",
                                caption: "İş Grubu",
                            }
                        ],
                        height: '55vh',
                        filterRow: {
                            visible: true,
                        },
                        headerFilter: {
                            visible: true,
                        },
                        groupPanel: {
                            visible: true
                        },
                        export: {
                            enabled: true,
                        },
                        onContextMenuPreparing: function (e) {
                            if (e.target == "content") {
                                e.items = [
                                {
                                    text: "Sil",
                                    onItemClick: function () {
                                         sil(e.component);
                                    }
                                },
                                {
                                    text: "Ekle",
                                    onItemClick: function () {
                                         ekleGrid(e.component);
                                    }
                                },
                                {
                                    text: "Düzenle",
                                    onItemClick: function () {
                                        duzenleGridi(e.component);
                                    }
                                },
                                ];
                            }
                        },
                        stateStoring: {
                            enabled: true,
                            type: "localStorage",
                            storageKey: "FirmaYetkiliTelWpMesaj-" + kl,
                            customLoad: function () {
                                var state = localStorage.getItem(this.storageKey);
                                if (state) {
                                    state = JSON.parse(state);
                                    for (var i = 0; i < state.columns.length; i++) {
                                        state.columns[i].filterValue = null;
                                    }
                                    state.selectedRowKeys = null;
                                }
                                return state;
                            },
                            customSave: function (state) {
                                localStorage.setItem(this.storageKey, JSON.stringify(state));
                            },
                        },
                        onExporting: function (e) {
                            var workbook = new ExcelJS.Workbook();
                            var worksheet = workbook.addWorksheet('Müşteriler');
                            DevExpress.excelExporter.exportDataGrid({
                                worksheet: worksheet,
                                component: e.component,
                                customizeCell: function (options) {
                                    var excelCell = options;
                                    excelCell.font = {
                                        name: 'Arial',
                                        size: 12
                                    };
                                    excelCell.alignment = {
                                        horizontal: 'left'
                                    };
                                }
                            }).then(function () {
                                workbook.xlsx.writeBuffer().then(function (buffer) {
                                    saveAs(new Blob([buffer], {
                                        type: 'application/octet-stream'
                                    }), 'Müşteriler.xlsx');
                                });
                            });
                            e.cancel = true;
                        },
                    });
                }
            });
        }

        function confirmSend() {
            $('#confirmationModal').modal('hide');
            sendRequest();
        }

        function sendRequest() {
            showProgressModal();

            var selectedData = $('#firmaYetkiliTelefon').dxDataGrid('instance').getSelectedRowsData();
            var fileUpload = $("#istekDosya").get(0);
            var files = fileUpload.files;

            var aciklama = $('#aciklama').val();
            if (files.length === 0 && (!aciklama || aciklama.trim() === "")) {
                hideProgressModal();
                alert("Lütfen bir dosya yükleyin veya mesaj girin.");
                return;
            }

            var totalCustomers = selectedData.length;
            var sentCount = 0;

            var fileData = new FormData();
            for (var i = 0; i < files.length; i++) {
                fileData.append('files', files[i]);
            }
            fileData.append('aciklama', aciklama);

            function sendMessage(index) {
                if (index >= totalCustomers) {
                    hideProgressModal();
                    alert("Tüm mesajlar başarıyla gönderildi!");
                    window.location.reload();
                    return;
                }

                var customer = selectedData[index];
                fileData.set('selectedData', JSON.stringify([customer]));

                $.ajax({
                    url: '/Home/MusteriWpMesajGonder',
                    method: 'POST',
                    contentType: false,
                    processData: false,
                    data: fileData,
                    success: function (response) {
                        if (response.Sonuc === true) {
                            sentCount++;
                            updateProgressModal(sentCount, totalCustomers);

                            var randomDelay = Math.floor(Math.random() * (9000 - 1000)) + 1000;

                            setTimeout(function () {
                                sendMessage(index + 1);
                            }, randomDelay);
                        } else {
                            alert(`Gönderim Hatası: ${response.Msg}`);
                            hideProgressModal();
                        }
                    },
                    error: function () {
                        alert('Bir hata oluştu!');
                        hideProgressModal();
                    }
                });
            }
            sendMessage(0);
        }

        function duzenleGridi(dataGrid) {
            var selectedRowsData = dataGrid.getSelectedRowsData();
            if (selectedRowsData.length == 0) {
                alert("Lütfen bir veya daha fazla satır seçin.");
                return;
            }
            else {
                $("#modal_editModal").modal('show');
                $("#editGrid").dxDataGrid({
                    dataSource: selectedRowsData,
                    columns:  [
                            {
                                dataField: "ID",
                                caption: "ID",
                                visible: false,
                                allowEditing: false
                            },
                            {
                                dataField: "EKLENMETARIHI",
                                caption: "Eklenme Tarihi",
                                visible: true,
                                allowEditing: false
                            },
                            {
                                dataField: "ADSOYAD",
                                caption: "Ad Soyad",
                                visible: true,
                            },
                            {
                                dataField: "TELEFONNO",
                                caption: "Telefon",
                                visible: true,
                                editorOptions: {
                                    onInput: function (e) {
                                        var value = e.event.target.value;

                                        value = value.replace(/\D/g, '');

                                        if (!value.startsWith('90')) {
                                            value = '90' + value.slice(2);
                                        }

                                        value = value.slice(0, 12);

                                        e.event.target.value = value;
                                    }
                                },
                                allowEditing: true
                            },
                            {
                                dataField: "ISGRUBU",
                                caption: "İş Grubu",
                                visible: true,
                            },
                    ],
                    editing: {
                        mode: "cell",
                        allowUpdating: true,
                        allowAdding: false
                    },
                    showRowLines: true,
                });
            }

        }

        function duzenleKaydet() {
            var dataGrid = $("#editGrid").dxDataGrid("instance");

            dataGrid.saveEditData().done(function () {
                if (!confirm("Bu işlemi gerçekleştirmek istediğinizden emin misiniz?")) {
                    return;
                }

                showPleaseWait();
                var datas = dataGrid.getDataSource().items();

                var isValid = true;
                if (!isValid) {
                    hidePleaseWait();
                    return;
                }

                $.ajax({
                    url: '/Home/UpdateRecord',
                    method: 'POST',
                    data: JSON.stringify(datas),
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            $("#modal_editModal").modal('hide');

                            dataGrid.option('dataSource', []);
                            getir();
                        } else {
                            alert("Güncelleme başarısız: " + response.message);
                        }
                    },
                    error: function () {
                        alert("Bir hata oluştu.");
                    },
                    complete: function() {
                        hidePleaseWait();
                    }
                });
            }).fail(function () {
                alert("Hücredeki düzenlemeler tamamlanamadı. Lütfen tekrar deneyin.");
            });
        }

        function sil(component) {
             if (typeof component.getSelectedRowKeys !== 'function') {
                alert("Seçili kayıtları almak için geçerli bir bileşen bulunamadı.");
                return;
            }

             var selectedRowKeys = component.getSelectedRowKeys();

            if (selectedRowKeys.length > 0) {
                 if (confirm("Seçili kayıtları silmek istediğinize emin misiniz?")) {
                    var ids = selectedRowKeys;

                    $.ajax({
                         url: '/Home/DeleteRecord',
                         method: 'POST',
                         contentType: 'application/json',
                         data: JSON.stringify(ids),
                         success: function(response) {
                             if (response.success) {
                                 alert(response.message);
                                 getir();
                             } else {
                                 alert("Silme başarısız: " + response.message);
                             }
                         },
                         error: function(error) {
                             alert("Bir hata oluştu.");
                             console.error("Hata Detayı: ", error);
                         }
                     });
                }
            } else {
                alert("Lütfen bir veya daha fazla satır seçin.");
            }
        }

        function ekleKaydet() {
            var dataGrid = $("#addGrid").dxDataGrid("instance");

            dataGrid.saveEditData().done(function () {
                var datas = dataGrid.getDataSource().items();

                if (datas.length === 0) {
                    alert("Eklemek için gridde en az bir kayıt bulunmalıdır.");
                    return;
                }

                var telefonPattern = /^90\d{10}$/;

                for (var i = 0; i < datas.length; i++) {
                    var row = datas[i];

                    if (!row.ADSOYAD || !row.TELEFONNO || !row.ISGRUBU) {
                        alert("Tüm alanlar doldurulmalıdır. Eksik kayıt var.");
                        return;
                    }

                    if (!telefonPattern.test(row.TELEFONNO)) {
                        alert(`Telefon numarası geçersiz: ${row.TELEFONNO}. Lütfen 90XXXXXXXXXX formatında girin.`);
                        return;
                    }
                }

                $.ajax({
                    url: '/Home/AddRecord',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(datas),
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            $("#modal_addModal").modal("hide");
                            getir();
                        } else {
                            alert("Ekleme başarısız: " + response.message);
                        }
                    },
                    error: function (error) {
                        alert("Bir hata oluştu.");
                        console.error("Hata Detayı: ", error);
                    }
                });
            });
        }

        function ekleGrid() {
            $("#modal_addModal").modal('show');

            var bosData = [
                { ADSOYAD: "", TELEFONNO: "", ISGRUBU: "" }
            ];

            $("#addGrid").dxDataGrid({
                dataSource: bosData,
                editing: {
                    mode: "batch",
                    allowAdding: true,
                    allowUpdating: true,
                    allowDeleting: true
                },
                columns: [
                    {
                        dataField: "ADSOYAD",
                        caption: "Ad Soyad",
                        allowEditing: true,
                        validationRules: [{ type: "required", message: "Ad Soyad zorunludur." }]
                    },
                    {
                        dataField: "TELEFONNO",
                        caption: "Telefon No",
                        editorOptions: {
                            onInput: function (e) {
                                 var value = e.event.target.value;
                                 value = value.replace(/\D/g, '');
                                 if (!value.startsWith('90')) {
                                     value = '90' + value.slice(2);
                                 }
                                 value = value.slice(0, 12);
                                 e.event.target.value = value;
                            }
                        },
                        validationRules: [
                            {
                                type: "required",
                                message: "Telefon numarası zorunludur."
                            },
                        ],
                        allowEditing: true
                    },
                    {
                        dataField: "ISGRUBU",
                        caption: "İş Grubu",
                        validationRules: [{ type: "required", message: "İş Grubu zorunludur." }],
                        allowEditing: true
                    }
                ],
                showBorders: true,
                paging: { enabled: false }
            });

            $("#modal_addModal").on('shown.bs.modal', function () {
                $("#addGrid").dxDataGrid("instance").refresh();
            });
        }

        $(window).on('beforeunload', function () {
            let dataGrid = $("#firmaYetkiliTelefon").dxDataGrid("instance");
            dataGrid.refresh();
            dataGrid.clearSelection();
            dataGrid.option("focusedRowIndex", -1);
        });

    </script>
}